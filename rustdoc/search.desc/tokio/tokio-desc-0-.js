searchState.loadedDescShard("tokio", 0, "A runtime for writing reliable network applications …\nTraits, helpers, and type definitions for asynchronous I/O …\nTCP/UDP/Unix bindings for <code>tokio</code>.\nPins a value on the stack.\nDue to the <code>Stream</code> trait’s inclusion in <code>std</code> landing later …\nAsynchronous green-threads.\nReads bytes asynchronously.\nReads bytes from a source.\nSeek bytes asynchronously.\nWrites bytes asynchronously.\nA wrapper around a byte buffer that is incrementally …\nA handle to the standard error stream of a process.\nA handle to the standard input stream of a process.\nA handle to the standard output stream of a process.\nAdvances the size of the filled region of the buffer.\nAsserts that the first <code>n</code> unfilled bytes of the buffer are …\nReturns the total capacity of the buffer.\nClears the buffer, resetting the filled region to empty.\nTells this buffer that <code>amt</code> bytes have been consumed from …\nReturns a shared reference to the filled portion of the …\nReturns a mutable reference to the filled portion of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a mutable reference to the unfilled part of the …\nReturns a mutable reference to the first <code>n</code> bytes of the …\nReturns a shared reference to the initialized portion of …\nReturns a mutable reference to the initialized portion of …\nReturns a mutable reference to the entire buffer, without …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermines if this writer has an efficient …\nDetermines if this writer has an efficient …\nCreates a new <code>ReadBuf</code> from a fully initialized buffer.\nWaits for a seek operation to complete.\nAttempts to return the contents of the internal buffer, …\nAttempts to flush the object, ensuring that any buffered …\nAttempts to read from the <code>AsyncRead</code> into <code>buf</code>.\nInitiates or attempts to shut down this writer, returning …\nAttempt to write bytes from <code>buf</code> into the object.\nLike <code>poll_write</code>, except that it writes from a slice of …\nLike <code>poll_write</code>, except that it writes from a slice of …\nAppends data to the buffer, advancing the written position …\nReturns the number of bytes at the end of the slice that …\nSets the size of the filled region of the buffer.\nAttempts to seek to an offset, in bytes, in a stream.\nConstructs a new handle to the standard error of the …\nConstructs a new handle to the standard input of the …\nConstructs a new handle to the standard output of the …\nReturns a new <code>ReadBuf</code> comprised of the unfilled section up …\nReturns a mutable reference to the unfilled part of the …\nCreates a new <code>ReadBuf</code> from a buffer that may be …\nConverts or resolves without blocking to one or more …")